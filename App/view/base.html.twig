<!doctype html>
<html lang="de">


<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width*.95, initial-scale=0.9">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <style>
        .welcomeButton {

            min-width: 50%;
            max-width: 50%;
            max-height: 100%;
            min-height: 100%;

        }

        .labelWelcomeButton {
            display: flex;
            align-items: center;
            text-align: center;
            justify-content: center;
            border-radius: 2rem;
        }

        .welcomeButtonDiv {
            min-width: 100%;
            max-width: 100%;
            max-height: 100%;
            min-height: 100%;
        }

        .scrollable-contentleft {
            min-width: 60%;
            max-width: 60%;
            max-height: 50%;
            min-height: 50%;
            overflow: hidden;
            scrollbar-gutter: stable both-edges;
            border-radius: 1.5rem;
        }

        .content-right {
            min-width: 20%;
            max-width: 20%;
            max-height: 50%;
            min-height: 50%;
            border-radius: 1.5rem;
            overflow: hidden;
        }

        .scrollable-contentbuttons {
            max-width: 100%;
            max-height: 20%;
            overflow: hidden;
            scrollbar-gutter: stable both-edges;

        }

        body, html, head,
        .scrollable-contentleft:hover,
        .scrollable-contentbuttons:hover,
        .scrollable-contentleft:active,
        .scrollable-contentbuttons:active,
        .scrollable-contentleft:focus,
        .scrollable-contentbuttons:focus {
            overflow-y: auto;
        }

        body {
            overflow: hidden;
        }

    </style>
    {% block head %}
    {% endblock %}
    <title>Quiz {% block title %}{% endblock %}</title>
</head>
<body>
<div id="header">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary text-white mb-5 sticky-top">
        <div class="container-fluid">
            <a href="#" class="navbar-brand">Quiz</a>
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <div class="navbar-nav">
                    <a href="config/" class="nav-item nav-link">Config</a>
                    <a href="quizquestion/quickstart/" class="nav-item nav-link">Start Quiz</a>
                    <a href="edit/" class="nav-item nav-link">Edit</a>
                    <a href="edit/import" class="nav-item nav-link">Import</a>
                </div>

                <div class="navbar-nav ms-auto">
                    <a href="user/logout" class="nav-item nav-link">Logout</a>
                </div>
            </div>
        </div>
    </nav>
</div>
<div id="content">
    <form method="post">
        <div class="container text-center py-5 my-4">
            <h3 class="text-decoration-underline text-bold">{% block subtitle %}{% endblock %}</h3>
        </div>
        <div class="row row-cols-7 gx-5">
            <div class="col"></div>
            <div class="col-2 bg-light rounded-5 my-2 py-2 align-self-left scrollable-contentleft"
                 id="contentLeft">
                {% block contentleft %}{% endblock %}
            </div>
            <div class="col"></div>
            <div class="col bg-light rounded-5 my-2 py-2 align-self-right content-right" id="contentRight">
                {% block contentright %}{% endblock %}
            </div>
            <div class="col"></div>
        </div>
        <div class="container-flex scrollable-contentbuttons" id="buttons">
            <div class="row px-1 m-1 gx-1">
                {% block buttons %}{% endblock %}
            </div>
        </div>
    </form>
</div>
<div id="footer" class="text-start fixed-bottom px-5">
    {% block footer %}
        &copy; Copyright 2024 by Ren√©.
    {% endblock %}
</div>
<script>
    function clickFn(id) {
        let idStr = "#a_id" + id;
        document.querySelector(idStr).checked = !document.querySelector(idStr).checked
    }

    function clickCategory(categoryId) {
        let valueId = "#numberOfQuestions" + categoryId;
        let checkBoxId = "#categorySwitch" + categoryId;
        let maxQuestionsId = "#maxQuestions" + categoryId;
        let val = document.querySelector(checkBoxId).checked ? document.querySelector(maxQuestionsId).value : 0;
        document.querySelector(valueId).innerHTML = val;
        let maxValue = Number(document.querySelector('#maxVal').innerHTML);
        maxValue = val > 0 ? maxValue + Number(document.querySelector(maxQuestionsId).value) :
            maxValue - Number(document.querySelector(maxQuestionsId).value);
        document.querySelector('#customRange').max = maxValue;
        document.querySelector('#currentVal').innerHTML =
            Number(document.querySelector('#currentVal').innerHTML) > maxValue ?
                maxValue : document.querySelector('#currentVal').innerHTML;
        document.querySelector('#maxVal').innerHTML = `${maxValue}`;
        document.querySelector('#maxQuestions').innerHTML = document.querySelector('#maxVal').innerHTML;
    }

    function changeAllCategories() {
        let isChecked = document.querySelector('#categoryAll').checked;
        document.querySelectorAll('.categories').forEach(function (value) {
            if (value.checked !== isChecked) {
                value.checked = !value.checked;
                clickCategory(value.value)
            }
        });
    }

    function trackVal(element) {
        element.nextElementSibling.value = element.value;
        document.getElementById('currentVal').innerHTML = element.value;
    }

    function toggleLoginRegister(toggleButton) {
        let buttonUserName = document.querySelector('#inputUsername');
        let buttonEmailValidate = document.querySelector('#inputEmailValidate');
        let buttonPasswordValidate = document.querySelector('#inputPasswordValidate');
        let labelUserName = document.querySelector('#labelInputUsername');
        let labelEmailValidate = document.querySelector('#labelInputEmailValidate');
        let labelPasswordValidate = document.querySelector('#labelInputPasswordValidate');
        let buttonConfirm = document.querySelector('#confirm');

        if (toggleButton.innerHTML === 'go to Register') {
            buttonUserName.type = 'text';
            buttonEmailValidate.type = 'email';
            buttonPasswordValidate.type = 'password';
            labelUserName.hidden = "";
            labelEmailValidate.hidden = "";
            labelPasswordValidate.hidden = "";
            buttonConfirm.name = 'registerUser';
            buttonConfirm.innerHTML = 'Sign Up';
            toggleButton.innerHTML = 'go to Login';
        } else {
            buttonUserName.type = 'hidden';
            buttonEmailValidate.type = 'hidden';
            buttonPasswordValidate.type = 'hidden';
            labelUserName.hidden = "hidden";
            labelEmailValidate.hidden = "hidden";
            labelPasswordValidate.hidden = "hidden";
            buttonConfirm.name = 'loginUser';
            buttonConfirm.innerHTML = 'Sign In';
            toggleButton.innerHTML = 'go to Register';
        }
    }

    function showDetails(button, text, explanation, answers) {

        document.querySelector('#detailsQuestion').innerHTML = text;
        document.querySelector('#detailsDescription').innerHTML = explanation;
        let detailsAnswers = document.querySelector('#detailsAnswers');
        detailsAnswers.innerHTML = document.createElement("p").innerHTML = '';
        for (let answersKey in answers) {
            let nextNode = document.createElement("p");
            nextNode.innerHTML = answers[answersKey].text;
            nextNode.style.textAlign = 'center';
            nextNode.style.color = answers[answersKey].isRight === 'true' ? 'green' : 'red';
            nextNode.style.background = answers[answersKey].isSelected === 'true' ? 'yellow' : detailsAnswers.style.background;
            detailsAnswers.appendChild(nextNode);
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
</body>
</html>

